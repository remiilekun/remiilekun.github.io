{"version":3,"sources":["C:/Projects/corona-fe-new/src/app/profile/profile.component.html","C:/Projects/corona-fe-new/src/app/profile/profile.component.scss","C:/Projects/corona-fe-new/src/app/profile/profile.component.ts","C:/Projects/corona-fe-new/src/app/profile/profile.module.ts"],"names":[],"mappings":"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","file":"profile.module.chunk.js","sourcesContent":["module.exports = \"<div class=\\\"container-fluid profile light-grey-bg py-4\\\">\\r\\n  <div class=\\\"loader-container\\\" [class.hide]=\\\"user && user.firstName\\\">\\r\\n    <app-material-spinner></app-material-spinner>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row justify-content-center align-items-center light-grey-bg\\\">\\r\\n    <div class=\\\"col-md-8 col-12\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-4 col-12\\\">\\r\\n          <div class=\\\"card profile-card\\\">\\r\\n            <div class=\\\"profile-card-top\\\">\\r\\n              <div class=\\\"profile-image-con mb-2\\\" (click)=\\\"createFile.click()\\\">\\r\\n                <img *ngIf=\\\"user.profilePicture !== 'url'\\\" class=\\\"img \\\" [src]=\\\"user.profilePicture\\\">\\r\\n                <img *ngIf=\\\"user.profilePicture === 'url'\\\" class=\\\"img \\\" src=\\\"../../assets/avatar.png\\\">\\r\\n\\r\\n                <div class=\\\"overlay\\\">\\r\\n                  <i class=\\\"fa fa-camera\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  <p class=\\\"overlay-text\\\"> Update profile picture</p>\\r\\n                  <input #createFile (change)=\\\"uploadProfileImage($event)\\\" type=\\\"file\\\" accept=\\\"image/*\\\" size=\\\"200KB\\\" name=\\\"image\\\" class=\\\"file-input\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n              <h3 class=\\\"py-3 text-center profile-name mb-0\\\">\\r\\n                <span> {{user.firstName}} </span> {{user.lastName}}\\r\\n              </h3>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"card-body\\\">\\r\\n\\r\\n              <h4 class=\\\"small-blue m-0\\\">\\r\\n                <b>Role</b>\\r\\n              </h4>\\r\\n              <p class=\\\"grey-text mb-4\\\"> {{getUserGroupName(user)}} </p>\\r\\n\\r\\n              <h4 class=\\\"small-blue m-0\\\">\\r\\n                <b>Title</b>\\r\\n              </h4>\\r\\n              <p class=\\\"grey-text mb-2\\\"> {{getTeamNames(user)}} </p>\\r\\n\\r\\n              <hr>\\r\\n\\r\\n              <h4 class=\\\"text-uppercase normal-font dark-grey-text\\\">\\r\\n                <b>contact info</b>\\r\\n              </h4>\\r\\n\\r\\n              <h4 class=\\\"small-blue text-uppercase mb-2 show-more\\\" (click)=\\\"contactInfoToggle()\\\">\\r\\n                <b>show {{info}}\\r\\n                  <i *ngIf=\\\"!showContact\\\" class=\\\"fa fa-angle-down\\\"></i>\\r\\n                  <i *ngIf=\\\"showContact\\\" class=\\\"fa fa-angle-up\\\"></i>\\r\\n                </b>\\r\\n              </h4>\\r\\n\\r\\n              <div *ngIf=\\\"showContact\\\">\\r\\n                <h4 class=\\\"small-blue m-0\\\">\\r\\n                  <b>Phone Number</b>\\r\\n                </h4>\\r\\n                <div class=\\\"md-form mb-2 clearfix\\\">\\r\\n                  <!-- <p class=\\\"grey-text m-0 p-0\\\">{{user.mobileNumber}}</p> -->\\r\\n                  <input type=\\\"text\\\" [disabled]=\\\"makePhoneEditable\\\" required class=\\\"form-control grey-text m-0 p-0 phone-field\\\" [class.is-invalid]=\\\"showError\\\"\\r\\n                    name=\\\"phoneNumber\\\" #phoneNumber [(ngModel)]=\\\"user.mobileNumber\\\" mdbActive />\\r\\n                  <div *ngIf=\\\"makePhoneEditable; else elseblock\\\" (click)=\\\"editPhoneNumber()\\\" class=\\\"phone-edit\\\">\\r\\n                    <i class=\\\"fa fa-pencil\\\"></i>\\r\\n                  </div>\\r\\n                  <ng-template #elseblock>\\r\\n                    <div (click)=\\\"editPhoneNumber()\\\" class=\\\"phone-edit\\\">\\r\\n                      <i class=\\\"fa fa-times\\\"></i>\\r\\n                    </div>\\r\\n                    <div (click)=\\\"updatePhoneNumber()\\\" class=\\\"phone-edit\\\">\\r\\n                      <i class=\\\"fa fa-check\\\"></i>\\r\\n                    </div>\\r\\n                  </ng-template>\\r\\n                </div>\\r\\n\\r\\n                <h4 class=\\\"small-blue m-0\\\">\\r\\n                  <b>Email</b>\\r\\n                </h4>\\r\\n                <p class=\\\"grey-text mb-2\\\"> {{user.email}} </p>\\r\\n\\r\\n                <h4 class=\\\"small-blue m-0\\\">\\r\\n                  <b>Country</b>\\r\\n                </h4>\\r\\n                <p class=\\\"grey-text mb-2\\\"> {{ getUserCountry(user)}} </p>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"card my-3 change-password\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <a class=\\\"m-0\\\" (click)=\\\"openPasswordModal()\\\">\\r\\n                <i class=\\\"fa fa-user mr-2 blue-color\\\"></i>\\r\\n                <span class=\\\"small-blue \\\">\\r\\n                  <b>Change password</b>\\r\\n                </span>\\r\\n              </a>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"col-md-8 col-12\\\">\\r\\n\\r\\n          <div class=\\\"card mb-3 profile-card\\\">\\r\\n            <div class=\\\"profile-card-right-top\\\">\\r\\n              <div class=\\\"col profile-icon float-right\\\">\\r\\n                <span class=\\\"text-uppercase smaller-blue\\\">Tasks</span>\\r\\n                <i class=\\\"fa fa-user blue-color\\\"></i>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row w-100 m-0 text-center align-items-center py-3 no-pb\\\">\\r\\n\\r\\n\\r\\n              <div class=\\\"col-md-3 p-0 tab-link\\\" (click)=\\\"gotoTab(1)\\\">\\r\\n                <p class=\\\"m-0 big-grey\\\">{{ assignedTaskCount.getValue() }}</p>\\r\\n                <p class=\\\"m-0 text-uppercase smaller-blue\\\">active</p>\\r\\n                <div class=\\\"w-100 indicator\\\" [class.active]=\\\"!tab1\\\"></div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"col-md-3 p-0 tab-link\\\" (click)=\\\"gotoTab(2)\\\">\\r\\n                <p class=\\\"m-0 big-grey\\\">{{ completedTaskCount.getValue() }}</p>\\r\\n                <p class=\\\"m-0 text-uppercase smaller-blue\\\">archived</p>\\r\\n                <div class=\\\"w-100 indicator\\\" [class.active]=\\\"!tab2\\\"></div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"col-md-3 p-0 tab-link\\\" (click)=\\\"gotoTab(3)\\\">\\r\\n                <p class=\\\"m-0 big-grey\\\">{{ declinedTaskCount.getValue() }}</p>\\r\\n                <p class=\\\"m-0 text-uppercase smaller-blue\\\">inactive</p>\\r\\n                <div class=\\\"w-100 indicator\\\" [class.active]=\\\"!tab3\\\"></div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"col-md-3 p-0 tab-link\\\" (click)=\\\"gotoTab(4)\\\">\\r\\n                <p class=\\\"m-0 big-grey\\\">{{ escalatedTaskCount.getValue() }}</p>\\r\\n                <p class=\\\"m-0 text-uppercase smaller-blue\\\">Escalated</p>\\r\\n                <div class=\\\"w-100 indicator\\\" [class.active]=\\\"!tab4\\\"></div>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <!-- <p class=\\\"text-uppercase smaller-blue dark-grey-text\\\">active tasks</p>\\r\\n              <div class=\\\"task-body\\\">\\r\\n                 \\r\\n              </div> -->\\r\\n\\r\\n              <div [hidden]=\\\"tab1\\\">\\r\\n\\r\\n                <p class=\\\"text-uppercase smaller-blue dark-grey-text\\\">active tasks\\r\\n                  <span class=\\\"float-right viewAll\\\" (click)=\\\"viewAllActiveTasks()\\\">\\r\\n                    <i *ngIf=\\\"!viewAllStatus\\\" class=\\\"fa fa-check-square-o\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                    <i *ngIf=\\\"viewAllStatus\\\" class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                    &nbsp; {{statusTitle}}\\r\\n                  </span>\\r\\n                </p>\\r\\n                <div class=\\\"task-body\\\">\\r\\n                  <div *ngIf=\\\"!viewAllStatus\\\">\\r\\n                    <table class=\\\"table m-0\\\">\\r\\n                      <thead>\\r\\n                        <tr class=\\\"task-row\\\">\\r\\n                          <th class=\\\"arrow\\\"></th>\\r\\n                          <th class=\\\"smaller-blue due\\\">\\r\\n                            <b>Date Due</b>\\r\\n                          </th>\\r\\n                          <th class=\\\"smaller-blue teams\\\">\\r\\n                            <b>Title</b>\\r\\n                          </th>\\r\\n                          <th class=\\\"smaller-blue desc\\\">\\r\\n                            <b>Description</b>\\r\\n                          </th>\\r\\n                          <th class=\\\"task-circle\\\"></th>\\r\\n                        </tr>\\r\\n                      </thead>\\r\\n                      <tbody>\\r\\n                        <tr class=\\\"taskInactive\\\" [ngClass]=\\\"{'taskActive': highlightedTask === 1}\\\" (click)=\\\"toggleTask(1)\\\">\\r\\n                          <td colspan=\\\"5\\\" class=\\\"p-0\\\">\\r\\n                            <table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" class=\\\"tbl-accordion-nested\\\">\\r\\n                              <thead>\\r\\n                                <tr class=\\\"task-row task-title-bg\\\">\\r\\n                                  <th class=\\\"arrow\\\">\\r\\n                                    <b>\\r\\n                                      <i [ngClass]=\\\"{'fa-angle-down': highlightedTask === 1}\\\" class=\\\"fa fa-angle-right red-color\\\"></i>\\r\\n                                    </b>\\r\\n                                  </th>\\r\\n                                  <th colspan=\\\"3\\\" class=\\\"tbl-accordion-section small-font red-color\\\">\\r\\n                                    <b>Overdue</b>\\r\\n                                  </th>\\r\\n                                  <th class=\\\"task-badge\\\">\\r\\n                                    <span class=\\\"numberCircle text-white\\\">{{(activeTaskService.userTasks | async | sortTask: 'overdue').length}}</span>\\r\\n                                  </th>\\r\\n                                </tr>\\r\\n                              </thead>\\r\\n                              <tbody class=\\\"task-content\\\">\\r\\n                                <tr class=\\\"grey-text task-row\\\" *ngFor=\\\"let task of activeTaskService.userTasks | async | sortTask: 'overdue'\\\">\\r\\n                                  <td class=\\\"arrow\\\">\\r\\n                                    <!-- <i class=\\\"fa fa-angle-down blue-color\\\"></i> -->\\r\\n                                  </td>\\r\\n                                  <td class=\\\"text-center due small-font\\\">\\r\\n                                    {{task.templateFieldsValues.priorTemplate.endDateTime}}\\r\\n                                    <!-- {{formatTaskDate}} -->\\r\\n                                  </td>\\r\\n                                  <td class=\\\"teams small-font\\\">{{task.title}}</td>\\r\\n                                  <td class=\\\"desc small-font\\\">{{task.description}}</td>\\r\\n                                  <td class=\\\"task-circle small-font\\\">\\r\\n                                    <i class=\\\"fa fa-exclamation-circle overdue-icon task-icon\\\"></i>\\r\\n                                  </td>\\r\\n                                </tr>\\r\\n                              </tbody>\\r\\n                            </table>\\r\\n                          </td>\\r\\n\\r\\n                        </tr>\\r\\n\\r\\n                        <tr class=\\\"taskInactive\\\" [ngClass]=\\\"{'taskActive': highlightedTask === 2}\\\" (click)=\\\"toggleTask(2)\\\">\\r\\n                          <td colspan=\\\"5\\\" class=\\\"p-0\\\">\\r\\n                            <table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" class=\\\"tbl-accordion-nested \\\">\\r\\n                              <thead>\\r\\n                                <tr class=\\\"task-row task-title-bg\\\">\\r\\n                                  <th class=\\\"arrow\\\">\\r\\n                                    <i [ngClass]=\\\"{'fa-angle-down': highlightedTask === 2}\\\" class=\\\"fa fa-angle-right dark-grey-text\\\"></i>\\r\\n                                  </th>\\r\\n                                  <th colspan=\\\"3\\\" class=\\\"tbl-accordion-section small-font dark-grey-text\\\">\\r\\n                                    <b>Today</b>\\r\\n                                  </th>\\r\\n                                  <th class=\\\"task-badge\\\">\\r\\n                                    <span class=\\\"numberCircle text-white\\\">{{(activeTaskService.userTasks | async | sortTask: 'today').length}}</span>\\r\\n                                  </th>\\r\\n                                </tr>\\r\\n                              </thead>\\r\\n                              <tbody class=\\\"task-content\\\" *ngFor=\\\"let task of activeTaskService.userTasks | async | sortTask: 'today'\\\">\\r\\n                                <tr class=\\\"grey-text task-row\\\">\\r\\n                                  <td class=\\\"arrow\\\">\\r\\n                                    <!-- <i class=\\\"fa fa-angle-down blue-color\\\"></i> -->\\r\\n                                  </td>\\r\\n                                  <td class=\\\"text-center due small-font\\\">\\r\\n                                    <b>{{task.timeDiff}}</b>\\r\\n                                    <br/> hours\\r\\n                                  </td>\\r\\n                                  <td class=\\\"teams small-font\\\">{{task.title}}</td>\\r\\n                                  <td class=\\\"desc small-font\\\">{{task.description}}</td>\\r\\n                                  <td class=\\\"task-circle small-font\\\">\\r\\n                                    <i class=\\\"fa fa-circle assigned-icon task-icon\\\" *ngIf=\\\"task.status.toLowerCase() == 'assigned'\\\"></i>\\r\\n                                    <i class=\\\"fa fa-circle accepted-icon task-icon\\\" *ngIf=\\\"task.status.toLowerCase() == 'accepted'\\\"></i>\\r\\n                                    <i class=\\\"fa fa-circle in-progress-icon task-icon\\\" *ngIf=\\\"task.status.toLowerCase() == 'in progress'\\\"></i>\\r\\n                                    <i class=\\\"fa fa-circle paused-icon task-icon\\\" *ngIf=\\\"task.status.toLowerCase() == 'paused'\\\"></i>\\r\\n                                  </td>\\r\\n                                </tr>\\r\\n                              </tbody>\\r\\n                            </table>\\r\\n                          </td>\\r\\n\\r\\n                        </tr>\\r\\n\\r\\n                        <tr class=\\\"taskInactive\\\" [ngClass]=\\\"{'taskActive': highlightedTask === 3}\\\" (click)=\\\"toggleTask(3)\\\">\\r\\n                          <td colspan=\\\"5\\\" class=\\\"p-0\\\">\\r\\n                            <table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" class=\\\"tbl-accordion-nested\\\">\\r\\n                              <thead>\\r\\n                                <tr class=\\\"task-row task-title-bg\\\">\\r\\n                                  <th class=\\\"arrow\\\">\\r\\n                                    <i [ngClass]=\\\"{'fa-angle-down': highlightedTask === 3}\\\" class=\\\"fa fa-angle-right dark-grey-text\\\"></i>\\r\\n                                  </th>\\r\\n                                  <th colspan=\\\"3\\\" class=\\\"tbl-accordion-section small-font dark-grey-text\\\">\\r\\n                                    <b>Anytime</b>\\r\\n                                  </th>\\r\\n                                  <th class=\\\"task-badge\\\">\\r\\n                                    <span class=\\\"numberCircle text-white\\\">{{(activeTaskService.userTasks | async | sortTask: 'anytime').length}}</span>\\r\\n                                  </th>\\r\\n                                </tr>\\r\\n                              </thead>\\r\\n                              <tbody class=\\\"task-content\\\" *ngFor=\\\"let task of activeTaskService.userTasks | async | sortTask: 'anytime'\\\">\\r\\n                                <tr class=\\\"grey-text task-row\\\">\\r\\n                                  <td class=\\\"arrow\\\">\\r\\n                                    <!-- <i class=\\\"fa fa-angle-down blue-color\\\"></i> -->\\r\\n                                  </td>\\r\\n                                  <td class=\\\"text-center due small-font\\\">\\r\\n\\r\\n                                  </td>\\r\\n                                  <td class=\\\"teams small-font\\\">{{task.title}}</td>\\r\\n                                  <td class=\\\"desc small-font\\\">{{task.description}}</td>\\r\\n                                  <td class=\\\"task-circle small-font\\\">\\r\\n                                    <i class=\\\"fa fa-circle assigned-icon task-icon\\\" *ngIf=\\\"task.status.toLowerCase() == 'assigned'\\\"></i>\\r\\n                                    <i class=\\\"fa fa-circle accepted-icon task-icon\\\" *ngIf=\\\"task.status.toLowerCase() == 'accepted'\\\"></i>\\r\\n                                    <i class=\\\"fa fa-circle paused-icon task-icon\\\" *ngIf=\\\"task.status.toLowerCase() == 'paused'\\\"></i>\\r\\n                                    <i class=\\\"fa fa-circle in-progress-icon task-icon\\\" *ngIf=\\\"task.status.toLowerCase() == 'in progress'\\\"></i>\\r\\n                                  </td>\\r\\n                                </tr>\\r\\n                              </tbody>\\r\\n                            </table>\\r\\n                          </td>\\r\\n\\r\\n                        </tr>\\r\\n\\r\\n                        <tr class=\\\"taskInactive\\\" [ngClass]=\\\"{'taskActive': highlightedTask === 4}\\\" (click)=\\\"toggleTask(4)\\\">\\r\\n                          <td colspan=\\\"5\\\" class=\\\"p-0\\\">\\r\\n                            <table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" class=\\\"tbl-accordion-nested\\\">\\r\\n                              <thead>\\r\\n                                <tr class=\\\"task-row task-title-bg\\\">\\r\\n                                  <th class=\\\"arrow\\\">\\r\\n                                    <i [ngClass]=\\\"{'fa-angle-down': highlightedTask === 4}\\\" class=\\\"fa fa-angle-right dark-grey-text\\\"></i>\\r\\n                                  </th>\\r\\n                                  <th colspan=\\\"4\\\" class=\\\"tbl-accordion-section small-font dark-grey-text\\\">\\r\\n                                    <b>Frequent</b>\\r\\n                                  </th>\\r\\n                                  <th class=\\\"task-badge\\\">\\r\\n                                    <span class=\\\"numberCircle text-white\\\">{{(activeTaskService.userTasks | async | sortTask: 'frequent').length}}</span>\\r\\n                                  </th>\\r\\n                                </tr>\\r\\n                              </thead>\\r\\n                              <tbody class=\\\"task-content\\\">\\r\\n                                <tr class=\\\"grey-text task-row\\\" class=\\\"subTaskInactive\\\" [ngClass]=\\\"{'subTaskActive': subHighlightedTask === 1}\\\" (click)=\\\"toggleSubTask(1)\\\">\\r\\n                                  <td class=\\\"arrow task-title-bg\\\">\\r\\n                                    <!-- <i class=\\\"fa fa-angle-down blue-color\\\"></i> -->\\r\\n                                  </td>\\r\\n                                  <td colspan=\\\"5\\\" class=\\\"p-0\\\">\\r\\n                                    <table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" class=\\\"tbl-accordion-nested\\\">\\r\\n                                      <thead>\\r\\n                                        <tr class=\\\"task-row task-title-bg\\\">\\r\\n                                          <th class=\\\"arrow\\\">\\r\\n                                            <i [ngClass]=\\\"{'fa-angle-down': subHighlightedTask === 1}\\\" class=\\\"fa fa-angle-right dark-grey-text\\\"></i>\\r\\n                                          </th>\\r\\n                                          <th colspan=\\\"4\\\" class=\\\"tbl-accordion-section small-font dark-grey-text\\\">\\r\\n                                            <b>Weekly</b>\\r\\n                                          </th>\\r\\n                                          <th class=\\\"task-badge\\\">\\r\\n                                            <span class=\\\"numberCircle text-white\\\">{{(activeTaskService.userTasks | async | sortTask: 'weekly').length}}</span>\\r\\n                                          </th>\\r\\n                                        </tr>\\r\\n                                      </thead>\\r\\n                                      <tbody class=\\\"sub-task-content\\\" *ngFor=\\\"let task of activeTaskService.userTasks | async | sortTask: 'weekly'\\\">\\r\\n                                        <tr class=\\\"grey-text task-row\\\">\\r\\n                                          <td class=\\\"arrow\\\">\\r\\n                                            <!-- <i class=\\\"fa fa-angle-down blue-color\\\"></i> -->\\r\\n                                          </td>\\r\\n                                          <td class=\\\"text-center due small-font\\\">\\r\\n                                            {{task.templateFieldsValues.priorTemplate.endDateTime}}\\r\\n                                          </td>\\r\\n                                          <td class=\\\"teams small-font\\\">{{task.title}}</td>\\r\\n                                          <td class=\\\"desc small-font\\\">{{task.description}}</td>\\r\\n                                          <td class=\\\"task-circle small-font\\\">\\r\\n                                            <i class=\\\"fa fa-circle assigned-icon task-icon\\\" *ngIf=\\\"task.status.toLowerCase() == 'assigned'\\\"></i>\\r\\n                                            <i class=\\\"fa fa-circle accepted-icon task-icon\\\" *ngIf=\\\"task.status.toLowerCase() == 'accepted'\\\"></i>\\r\\n                                            <i class=\\\"fa fa-circle paused-icon task-icon\\\" *ngIf=\\\"task.status.toLowerCase() == 'paused'\\\"></i>\\r\\n                                            <i class=\\\"fa fa-circle in-progress-icon task-icon\\\" *ngIf=\\\"task.status.toLowerCase() == 'in progress'\\\"></i>\\r\\n                                          </td>\\r\\n                                        </tr>\\r\\n                                      </tbody>\\r\\n                                    </table>\\r\\n                                  </td>\\r\\n                                </tr>\\r\\n\\r\\n                                <tr class=\\\"grey-text task-row\\\" class=\\\"subTaskInactive\\\" [ngClass]=\\\"{'subTaskActive': subHighlightedTask === 2}\\\" (click)=\\\"toggleSubTask(2)\\\">\\r\\n                                  <td class=\\\"arrow task-title-bg\\\">\\r\\n                                    <!-- <i class=\\\"fa fa-angle-down blue-color\\\"></i> -->\\r\\n                                  </td>\\r\\n                                  <td colspan=\\\"5\\\" class=\\\"p-0\\\">\\r\\n                                    <table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" class=\\\"tbl-accordion-nested\\\">\\r\\n                                      <thead>\\r\\n                                        <tr class=\\\"task-row task-title-bg\\\">\\r\\n                                          <th class=\\\"arrow\\\">\\r\\n                                            <i [ngClass]=\\\"{'fa-angle-down': subHighlightedTask === 2}\\\" class=\\\"fa fa-angle-right dark-grey-text\\\"></i>\\r\\n                                          </th>\\r\\n                                          <th colspan=\\\"4\\\" class=\\\"tbl-accordion-section small-font dark-grey-text\\\">\\r\\n                                            <b>Monthly</b>\\r\\n                                          </th>\\r\\n                                          <th class=\\\"task-badge\\\">\\r\\n                                            <span class=\\\"numberCircle text-white\\\">{{(activeTaskService.userTasks | async | sortTask: 'monthly').length}}</span>\\r\\n                                          </th>\\r\\n                                        </tr>\\r\\n                                      </thead>\\r\\n                                      <tbody class=\\\"sub-task-content\\\" *ngFor=\\\"let task of activeTaskService.userTasks | async | sortTask: 'monthly'\\\">\\r\\n                                        <tr class=\\\"grey-text task-row\\\">\\r\\n                                          <td class=\\\"arrow\\\">\\r\\n                                            <!-- <i class=\\\"fa fa-angle-down blue-color\\\"></i> -->\\r\\n                                          </td>\\r\\n                                          <td class=\\\"text-center due small-font\\\">\\r\\n\\r\\n                                          </td>\\r\\n                                          <td class=\\\"teams small-font\\\">{{task.title}}</td>\\r\\n                                          <td class=\\\"desc small-font\\\">{{task.description}}</td>\\r\\n                                          <td class=\\\"task-circle small-font\\\">\\r\\n                                            <i class=\\\"fa fa-circle assigned-icon task-icon\\\" *ngIf=\\\"task.status.toLowerCase() == 'assigned'\\\"></i>\\r\\n                                            <i class=\\\"fa fa-circle accepted-icon task-icon\\\" *ngIf=\\\"task.status.toLowerCase() == 'accepted'\\\"></i>\\r\\n                                            <i class=\\\"fa fa-circle paused-icon task-icon\\\" *ngIf=\\\"task.status.toLowerCase() == 'paused'\\\"></i>\\r\\n                                            <i class=\\\"fa fa-circle in-progress-icon task-icon\\\" *ngIf=\\\"task.status.toLowerCase() == 'in progress'\\\"></i>\\r\\n                                          </td>\\r\\n                                        </tr>\\r\\n                                      </tbody>\\r\\n                                    </table>\\r\\n                                  </td>\\r\\n                                </tr>\\r\\n\\r\\n                                <tr class=\\\"grey-text task-row\\\" class=\\\"subTaskInactive\\\" [ngClass]=\\\"{'subTaskActive': subHighlightedTask === 3}\\\" (click)=\\\"toggleSubTask(3)\\\">\\r\\n                                  <td class=\\\"arrow task-title-bg\\\">\\r\\n                                    <!-- <i class=\\\"fa fa-angle-down blue-color\\\"></i> -->\\r\\n                                  </td>\\r\\n                                  <td colspan=\\\"5\\\" class=\\\"p-0\\\">\\r\\n                                    <table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" class=\\\"tbl-accordion-nested\\\">\\r\\n                                      <thead>\\r\\n                                        <tr class=\\\"task-row task-title-bg\\\">\\r\\n                                          <th class=\\\"arrow\\\">\\r\\n                                            <i [ngClass]=\\\"{'fa-angle-down': subHighlightedTask === 3}\\\" class=\\\"fa fa-angle-right dark-grey-text\\\"></i>\\r\\n                                          </th>\\r\\n                                          <th colspan=\\\"4\\\" class=\\\"tbl-accordion-section small-font dark-grey-text\\\">\\r\\n                                            <b>Quarterly</b>\\r\\n                                          </th>\\r\\n                                          <th class=\\\"task-badge\\\">\\r\\n                                            <span class=\\\"numberCircle text-white\\\">{{(activeTaskService.userTasks | async | sortTask: 'quarterly').length}}</span>\\r\\n                                          </th>\\r\\n                                        </tr>\\r\\n                                      </thead>\\r\\n                                      <tbody class=\\\"sub-task-content\\\" *ngFor=\\\"let task of activeTaskService.userTasks | async | sortTask: 'quarterly'\\\">\\r\\n                                        <tr class=\\\"grey-text task-row\\\">\\r\\n                                          <td class=\\\"arrow\\\">\\r\\n                                            <!-- <i class=\\\"fa fa-angle-down blue-color\\\"></i> -->\\r\\n                                          </td>\\r\\n                                          <td class=\\\"text-center due small-font\\\">\\r\\n\\r\\n                                          </td>\\r\\n                                          <td class=\\\"teams small-font\\\">{{task.title}}</td>\\r\\n                                          <td class=\\\"desc small-font\\\">{{task.description}}</td>\\r\\n                                          <td class=\\\"task-circle small-font\\\">\\r\\n                                            <i class=\\\"fa fa-circle assigned-icon task-icon\\\" *ngIf=\\\"task.status.toLowerCase() == 'assigned'\\\"></i>\\r\\n                                            <i class=\\\"fa fa-circle accepted-icon task-icon\\\" *ngIf=\\\"task.status.toLowerCase() == 'accepted'\\\"></i>\\r\\n                                            <i class=\\\"fa fa-circle paused-icon task-icon\\\" *ngIf=\\\"task.status.toLowerCase() == 'paused'\\\"></i>\\r\\n                                            <i class=\\\"fa fa-circle in-progress-icon task-icon\\\" *ngIf=\\\"task.status.toLowerCase() == 'in progress'\\\"></i>\\r\\n                                          </td>\\r\\n                                        </tr>\\r\\n                                      </tbody>\\r\\n                                    </table>\\r\\n                                  </td>\\r\\n                                </tr>\\r\\n                              </tbody>\\r\\n                            </table>\\r\\n                          </td>\\r\\n\\r\\n                        </tr>\\r\\n\\r\\n                        <tr class=\\\"taskInactive\\\" [ngClass]=\\\"{'taskActive': highlightedTask === 5}\\\" (click)=\\\"toggleTask(5)\\\">\\r\\n                          <td colspan=\\\"5\\\" class=\\\"p-0\\\">\\r\\n                            <table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" class=\\\"tbl-accordion-nested\\\">\\r\\n                              <thead>\\r\\n                                <tr class=\\\"task-row task-title-bg\\\">\\r\\n                                  <th class=\\\"arrow\\\">\\r\\n                                    <i [ngClass]=\\\"{'fa-angle-down': highlightedTask === 5}\\\" class=\\\"fa fa-angle-right dark-grey-text\\\"></i>\\r\\n                                  </th>\\r\\n                                  <th colspan=\\\"3\\\" class=\\\"tbl-accordion-section small-font dark-grey-text\\\">\\r\\n                                    <b>Other Days</b>\\r\\n                                  </th>\\r\\n                                  <th class=\\\"task-badge\\\">\\r\\n                                    <span class=\\\"numberCircle text-white\\\">{{(activeTaskService.userTasks | async | sortTask: 'others').length}}</span>\\r\\n                                  </th>\\r\\n                                </tr>\\r\\n                              </thead>\\r\\n                              <tbody class=\\\"task-content\\\" *ngFor=\\\"let task of activeTaskService.userTasks | async | sortTask: 'others'\\\">\\r\\n                                <tr class=\\\"grey-text task-row\\\">\\r\\n                                  <td class=\\\"arrow\\\">\\r\\n                                    <!-- <i class=\\\"fa fa-angle-down blue-color\\\"></i> -->\\r\\n                                  </td>\\r\\n                                  <td class=\\\"text-center due small-font\\\">\\r\\n                                    {{task.templateFieldsValues.priorTemplate.endDateTime}}\\r\\n                                  </td>\\r\\n                                  <td class=\\\"teams small-font\\\">{{task.title}}</td>\\r\\n                                  <td class=\\\"desc small-font\\\">{{task.description}}</td>\\r\\n                                  <td class=\\\"task-circle small-font\\\">\\r\\n                                    <i class=\\\"fa fa-circle assigned-icon task-icon\\\" *ngIf=\\\"task.status.toLowerCase() == 'assigned'\\\"></i>\\r\\n                                    <i class=\\\"fa fa-circle accepted-icon task-icon\\\" *ngIf=\\\"task.status.toLowerCase() == 'accepted'\\\"></i>\\r\\n                                    <i class=\\\"fa fa-circle paused-icon task-icon\\\" *ngIf=\\\"task.status.toLowerCase() == 'paused'\\\"></i>\\r\\n                                    <i class=\\\"fa fa-circle in-progress-icon task-icon\\\" *ngIf=\\\"task.status.toLowerCase() == 'in progress'\\\"></i>\\r\\n                                  </td>\\r\\n                                </tr>\\r\\n                              </tbody>\\r\\n                            </table>\\r\\n                          </td>\\r\\n\\r\\n                        </tr>\\r\\n\\r\\n                      </tbody>\\r\\n                    </table>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"viewAllStatus\\\">\\r\\n                    <table class=\\\"table m-0\\\">\\r\\n                      <thead>\\r\\n                        <tr class=\\\"task-row\\\">\\r\\n                          <th class=\\\"smaller-blue due text-center\\\">\\r\\n                            <b>Date Due</b>\\r\\n                          </th>\\r\\n                          <th class=\\\"smaller-blue teams\\\">\\r\\n                            <b>Title</b>\\r\\n                          </th>\\r\\n                          <th class=\\\"smaller-blue desc\\\">\\r\\n                            <b>Description</b>\\r\\n                          </th>\\r\\n                          <th class=\\\"task-circle\\\"></th>\\r\\n                        </tr>\\r\\n                      </thead>\\r\\n                      <tbody *ngFor=\\\"let task of activeTaskService.userTasks | async\\\">\\r\\n                        <tr class=\\\"grey-text task-row\\\">\\r\\n                          <td class=\\\"text-center due small-font\\\">\\r\\n                            {{task.templateFieldsValues.priorTemplate.endDateTime}}\\r\\n                          </td>\\r\\n                          <td class=\\\"teams small-font\\\">{{task.title}}</td>\\r\\n                          <td class=\\\"desc small-font\\\">{{task.description}}</td>\\r\\n                          <td class=\\\"task-circle small-font\\\">\\r\\n                            <i class=\\\"fa fa-circle assigned-icon task-icon\\\" *ngIf=\\\"task.status.toLowerCase() == 'assigned'\\\"></i>\\r\\n                            <i class=\\\"fa fa-circle accepted-icon task-icon\\\" *ngIf=\\\"task.status.toLowerCase() == 'accepted'\\\"></i>\\r\\n                            <i class=\\\"fa fa-circle in-progress-icon task-icon\\\" *ngIf=\\\"task.status.toLowerCase() == 'in progress'\\\"></i>\\r\\n                            <i class=\\\"fa fa-circle paused-icon task-icon\\\" *ngIf=\\\"task.status.toLowerCase() == 'paused'\\\"></i>\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                      </tbody>\\r\\n                    </table>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div [hidden]=\\\"tab2\\\">\\r\\n\\r\\n                <p class=\\\"text-uppercase smaller-blue dark-grey-text\\\">archived tasks</p>\\r\\n                <div class=\\\"task-body\\\">\\r\\n                  <div class=\\\"row m-0 p-0 justify-content-center align-items-center text-center zero-count wow fadeIn\\\" *ngIf=\\\"completedTaskCount.getValue() === 0\\\">\\r\\n                    <div class=\\\"col-md-12 py-4\\\">\\r\\n                      <img src=\\\"../../../assets/svg/group.svg\\\" alt=\\\"Empty\\\">\\r\\n                      <h6 class=\\\"header-text\\\">No archived tasks</h6>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <table class=\\\"table m-0\\\" *ngIf=\\\"completedTaskCount.getValue() !== 0\\\">\\r\\n                    <thead>\\r\\n                      <tr class=\\\"task-row\\\">\\r\\n                        <th class=\\\"smaller-blue due text-center\\\">\\r\\n                          <b>Date Due</b>\\r\\n                        </th>\\r\\n                        <th class=\\\"smaller-blue teams\\\">\\r\\n                          <b>Title</b>\\r\\n                        </th>\\r\\n                        <th class=\\\"smaller-blue desc\\\">\\r\\n                          <b>Description</b>\\r\\n                        </th>\\r\\n                        <th class=\\\"task-circle\\\"></th>\\r\\n                      </tr>\\r\\n                    </thead>\\r\\n                    <tbody *ngFor=\\\"let task of archivedTaskService.userTasks | async\\\">\\r\\n                      <tr class=\\\"grey-text task-row\\\">\\r\\n                        <td class=\\\"text-center due small-font\\\">\\r\\n                          {{task.templateFieldsValues.priorTemplate.endDateTime}}\\r\\n                        </td>\\r\\n                        <td class=\\\"teams small-font\\\">{{task.title}}</td>\\r\\n                        <td class=\\\"desc small-font\\\">{{task.description}}</td>\\r\\n                        <td class=\\\"task-circle small-font\\\">\\r\\n                          <i class=\\\"fa fa-circle accepted-icon task-icon\\\"></i>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </tbody>\\r\\n                  </table>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div [hidden]=\\\"tab3\\\">\\r\\n\\r\\n                <p class=\\\"text-uppercase smaller-blue dark-grey-text\\\">inactive tasks</p>\\r\\n                <div class=\\\"task-body\\\">\\r\\n                  <div class=\\\"row m-0 p-0 justify-content-center align-items-center text-center zero-count wow fadeIn\\\" *ngIf=\\\"declinedTaskCount.getValue() === 0\\\">\\r\\n                    <div class=\\\"col-md-12 py-4\\\">\\r\\n                      <img src=\\\"../../../assets/svg/group.svg\\\" alt=\\\"Empty\\\">\\r\\n                      <h6 class=\\\"header-text\\\">No in-active tasks</h6>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <table class=\\\"table m-0\\\" *ngIf=\\\"declinedTaskCount.getValue() !== 0\\\">\\r\\n                    <thead>\\r\\n                      <tr class=\\\"task-row\\\">\\r\\n                        <th class=\\\"smaller-blue due text-center\\\">\\r\\n                          <b>Date Due</b>\\r\\n                        </th>\\r\\n                        <th class=\\\"smaller-blue teams\\\">\\r\\n                          <b>Title</b>\\r\\n                        </th>\\r\\n                        <th class=\\\"smaller-blue desc\\\">\\r\\n                          <b>Description</b>\\r\\n                        </th>\\r\\n                        <th class=\\\"task-circle\\\"></th>\\r\\n                      </tr>\\r\\n                    </thead>\\r\\n                    <tbody *ngFor=\\\"let task of inactiveTaskService.userTasks | async\\\">\\r\\n                      <tr class=\\\"grey-text task-row\\\">\\r\\n                        <td class=\\\"text-center due small-font\\\">\\r\\n                          {{task.templateFieldsValues.priorTemplate.endDateTime}}\\r\\n                        </td>\\r\\n                        <td class=\\\"teams small-font\\\">{{task.title}}</td>\\r\\n                        <td class=\\\"desc small-font\\\">{{task.description}}</td>\\r\\n                        <td class=\\\"task-circle small-font\\\">\\r\\n                          <i class=\\\"fa fa-circle declined-icon task-icon\\\" *ngIf=\\\"task.status.toLowerCase() == 'declined'\\\"></i>\\r\\n                          <i class=\\\"fa fa-circle unassigned-icon task-icon\\\" *ngIf=\\\"task.status.toLowerCase() == 'unassigned'\\\"></i>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </tbody>\\r\\n                  </table>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div [hidden]=\\\"tab4\\\">\\r\\n\\r\\n                <p class=\\\"text-uppercase smaller-blue dark-grey-text\\\">escalated tasks</p>\\r\\n                <div class=\\\"task-body\\\">\\r\\n                  <div class=\\\"row m-0 p-0 justify-content-center align-items-center text-center zero-count wow fadeIn\\\" *ngIf=\\\"escalatedTaskCount.getValue() === 0\\\">\\r\\n                    <div class=\\\"col-md-12 py-4\\\">\\r\\n                      <img src=\\\"../../../assets/svg/group.svg\\\" alt=\\\"Empty\\\">\\r\\n                      <h6 class=\\\"header-text\\\">No escalated tasks</h6>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <table class=\\\"table m-0\\\" *ngIf=\\\"escalatedTaskCount.getValue() !== 0\\\">\\r\\n                    <thead>\\r\\n                      <tr class=\\\"task-row\\\">\\r\\n                        <th class=\\\"smaller-blue due text-center\\\">\\r\\n                          <b>Date Due</b>\\r\\n                        </th>\\r\\n                        <th class=\\\"smaller-blue teams\\\">\\r\\n                          <b>Title</b>\\r\\n                        </th>\\r\\n                        <th class=\\\"smaller-blue desc\\\">\\r\\n                          <b>Description</b>\\r\\n                        </th>\\r\\n                        <th class=\\\"task-circle\\\"></th>\\r\\n                      </tr>\\r\\n                    </thead>\\r\\n                    <tbody *ngFor=\\\"let task of escalatedTaskService.userTasks | async\\\">\\r\\n                      <tr class=\\\"grey-text task-row\\\">\\r\\n                        <td class=\\\"text-center due small-font\\\">\\r\\n                          {{task.templateFieldsValues.priorTemplate.endDateTime}}\\r\\n                        </td>\\r\\n                        <td class=\\\"teams small-font\\\">{{task.title}}</td>\\r\\n                        <td class=\\\"desc small-font\\\">{{task.description}}</td>\\r\\n                        <td class=\\\"task-circle small-font\\\">\\r\\n                          <i class=\\\"fa fa-circle escalated-icon task-icon\\\"></i>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </tbody>\\r\\n                  </table>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"modal-container\\\">\\r\\n  <div mdbModal #changePassModal=\\\"mdb-modal\\\" class=\\\"modal fade\\\" id=\\\"\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" [config]=\\\"{backdrop: true}\\\">\\r\\n    <div class=\\\"modal-dialog modal-sm\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header semi-grey-bg p-4\\\">\\r\\n          <h4 class=\\\"dark-text w-100 mb-0\\\">Change Password</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body mb-0\\\">\\r\\n          <form #changePassForm=\\\"ngForm\\\">\\r\\n            <div class=\\\"row m-0\\\">\\r\\n              <div class=\\\"col-12\\\">\\r\\n\\r\\n                <div class=\\\"md-form\\\">\\r\\n                  <input type=\\\"password\\\" required id=\\\"oldPassword\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"showError\\\" name=\\\"oldPassword\\\" #oldPassword\\r\\n                    [(ngModel)]=\\\"passwords.oldPassword\\\" mdbActive>\\r\\n                  <label for=\\\"oldPassword\\\">Confirm Old Password</label>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"md-form\\\">\\r\\n                  <input type=\\\"password\\\" required id=\\\"newPassword\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"showError\\\" name=\\\"newPassword\\\" #newPassword\\r\\n                    [(ngModel)]=\\\"passwords.newPassword\\\" mdbActive (ngModelChange)=\\\"comparePasswords()\\\">\\r\\n                  <label for=\\\"newPassword\\\">New Password</label>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"md-form\\\">\\r\\n                  <input type=\\\"password\\\" required id=\\\"confirmNewPassword\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"errors.comparePassword\\\"\\r\\n                    name=\\\"confirmNewPassword\\\" [(ngModel)]=\\\"passwords.confirmNewPassword\\\" (ngModelChange)=\\\"comparePasswords()\\\"\\r\\n                    #confirmNewPassword mdbActive>\\r\\n                  <label for=\\\"confirmNewPassword\\\" [class.text-danger]=\\\"errors.comparePassword\\\">Confirm New Password</label>\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"errors.comparePassword\\\">\\r\\n                  <div [hidden]=\\\"!errors.comparePassword\\\" class=\\\"text-danger error my-1\\\">\\r\\n                    Passwords don't match\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n        <div class=\\\"btn-groupe w-100 d-flex justify-content-end col-12 py-2\\\">\\r\\n          <button class=\\\"btn text-uppercase\\\" (click)=\\\"closePasswordModal()\\\" mdbRippleRadius>Cancel</button>\\r\\n          <button class=\\\"btn text-uppercase\\\" (click)=\\\"changePassword()\\\" [disabled]=\\\"!changePassForm.form.valid || errors.comparePassword\\\"\\r\\n            mdbRippleRadius>Change</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/corona-fe-new/src/app/profile/profile.component.html\n// module id = ../../../../../src/app/profile/profile.component.html\n// module chunks = profile.module","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".bold-text {\\n  font-weight: bold; }\\n\\n.big-text {\\n  margin: 0;\\n  font-size: 14px; }\\n\\n.text-center {\\n  text-align: center !important; }\\n\\n.normal-font {\\n  font-size: 1rem; }\\n\\n.small-font {\\n  font-size: 0.75rem; }\\n\\n.semi-dark-label {\\n  font-weight: 500;\\n  color: #676767; }\\n\\n.light-text {\\n  color: #9a9a9a;\\n  font-size: 12px; }\\n\\n.semi-dark-text {\\n  color: #676767; }\\n\\n.medium-dark-text {\\n  color: #000000;\\n  font-size: 13px;\\n  font-weight: 400; }\\n\\n.dark-text {\\n  color: #000000;\\n  font-size: 14px;\\n  font-weight: 500; }\\n\\n.grey-text {\\n  color: #9a9a9a !important;\\n  font-size: 0.7rem; }\\n\\n.dark-grey-text {\\n  color: #545353 !important; }\\n\\n.deep-blue-text {\\n  color: #07417d !important; }\\n\\n.blue-text {\\n  color: #004f91; }\\n\\n.dark-label {\\n  font-weight: bold;\\n  color: #000000; }\\n\\n.small-label {\\n  font-size: 12px; }\\n\\n.light-bg {\\n  background: #f7f7f7 !important; }\\n\\n.grey-bg {\\n  background: #9a9a9a !important; }\\n\\n.semi-grey-bg {\\n  background: #ededeb !important; }\\n\\n.semi-grey-bg-2 {\\n  background: #e7e7e7 !important; }\\n\\n.light-grey-bg {\\n  background: #f4f4f4 !important; }\\n\\n.bg-none {\\n  background: none !important; }\\n\\n.my-1 {\\n  padding: 0;\\n  margin: 5px 5px 5px 15px; }\\n\\n.toleft {\\n  margin-left: 13em; }\\n\\n.mt-c-m1 {\\n  margin-top: -2em; }\\n\\n.no-pb {\\n  padding-bottom: 0px !important; }\\n\\n.filler {\\n  -webkit-box-flex: 1;\\n      -ms-flex-positive: 1;\\n          flex-grow: 1; }\\n\\n.v {\\n  visibility: visible !important; }\\n\\n.fixed-action-btn {\\n  bottom: 5vh;\\n  right: 5vh; }\\n\\n.btn-floating {\\n  background: #f27023;\\n  width: 40px;\\n  height: 40px; }\\n\\n.btn-floating .fa {\\n    width: 100%; }\\n\\n.btn-group {\\n  position: unset; }\\n\\n.btn-group a {\\n    position: relative;\\n    padding: 0.25rem 1rem;\\n    padding-left: 0; }\\n\\n.btn-group a i {\\n      position: absolute;\\n      right: 6px;\\n      top: 8px; }\\n\\n.btn-groupe .btn {\\n  padding: 0.4rem;\\n  margin: 0;\\n  background: none;\\n  border: none;\\n  -webkit-box-shadow: none;\\n          box-shadow: none;\\n  font-size: 14px;\\n  font-weight: 500;\\n  color: #07417d !important; }\\n\\n.btn-flat {\\n  padding: 8px 10px; }\\n\\n.btn-transparent {\\n  color: #676767;\\n  background: none;\\n  border: none;\\n  -webkit-box-shadow: none;\\n          box-shadow: none;\\n  -webkit-transition: 0.2s all;\\n  transition: 0.2s all; }\\n\\n@media (max-width: 575px) {\\n  .btn {\\n    font-size: 0.6rem; }\\n    .btn-floating {\\n      right: 1px !important;\\n      width: 37px;\\n      height: 37px; } }\\n\\n.search-block {\\n  background-color: #f7f7f7;\\n  border-radius: 1px;\\n  color: #a8a8a8; }\\n\\n.search-icon {\\n  border: none;\\n  background-color: #f7f7f7; }\\n\\n.search-input {\\n  height: 100%;\\n  margin: 0;\\n  border: none;\\n  background-color: #f7f7f7;\\n  padding: 10px 10px 10px 0; }\\n\\n.search-input:focus {\\n    border-bottom: none !important;\\n    -webkit-box-shadow: none !important;\\n            box-shadow: none !important; }\\n\\n.dropdown-toggle-sort {\\n  background-color: #f7f7f7 !important;\\n  color: #9a9a9a !important;\\n  -webkit-box-shadow: none;\\n          box-shadow: none; }\\n\\n.dropdown-toggle-sort:hover, .dropdown-toggle-sort:focus {\\n    background-color: #f7f7f7 !important;\\n    color: #9a9a9a !important; }\\n\\n.dropdown-item.active, .dropdown-item:active {\\n  background-color: #f7f7f7 !important; }\\n\\nsmall.val-error {\\n  font-size: 10px;\\n  font-weight: 500;\\n  line-height: 0.8;\\n  position: relative;\\n  top: 1px; }\\n\\n.map-modal {\\n  margin-top: 15vh; }\\n\\n.map-modal agm-map {\\n    height: 60vh; }\\n\\n.freq-badge {\\n  font-size: 0.8rem;\\n  text-align: center;\\n  background: #e7e7e7;\\n  color: #252525;\\n  -webkit-box-shadow: none;\\n          box-shadow: none;\\n  border-radius: 500px;\\n  font-weight: 500; }\\n\\n.rb {\\n  border-right: 1px solid #d9d7d7; }\\n\\n.tb {\\n  border-top: 1px solid #d9d7d7; }\\n\\n.modal-container ::ng-deep .modal {\\n  overflow-y: auto !important; }\\n\\n.no-padding {\\n  padding: 0 !important; }\\n\\n.confirm-modal h4 {\\n  font-size: 16px;\\n  color: #000;\\n  font-weight: bold; }\\n\\n.confirm-modal p {\\n  font-size: 12px;\\n  color: #afafaf; }\\n\\n.modal-content--fixed {\\n  position: fixed;\\n  width: 100%;\\n  margin-top: 40px !important;\\n  overflow-y: hidden;\\n  height: 80vh; }\\n\\n.modal-content .head-content {\\n  width: 100%; }\\n\\n.modal-content .head-content .title-section {\\n    width: 65%; }\\n\\n.modal-content .head-content .btn {\\n    padding: 0.4rem;\\n    background: none;\\n    border: none;\\n    -webkit-box-shadow: none;\\n            box-shadow: none;\\n    color: #676767; }\\n\\n.modal-content .head-content .btn:hover {\\n      background: none !important; }\\n\\n.modal-content .head-content .btn .fa {\\n      color: #676767 !important; }\\n\\n.modal-content .head-content .btn-section {\\n      width: 35%; }\\n\\n.modal-content .error {\\n  margin-left: -1.2em;\\n  font-size: 70%; }\\n\\n.modal-body {\\n  background: #f7f7f7; }\\n\\n.modal-body--fixed {\\n    position: fixed;\\n    margin-top: 65px;\\n    overflow-y: scroll;\\n    height: 100vh;\\n    width: 100%; }\\n\\n.modal-container ::ng-deep .modal {\\n  overflow-y: auto !important; }\\n\\n@media (max-width: 575px) {\\n  .modal-content {\\n    margin-top: 25px; }\\n  .confirm-modal {\\n    margin-top: 50px; }\\n  .btn {\\n    font-size: 0.6rem !important; } }\\n\\n@media (min-width: 576px) and (max-width: 767px) {\\n  .modal-content {\\n    margin-top: 25px; }\\n  .confirm-modal {\\n    margin-top: 50px; } }\\n\\n@media (min-width: 768px) {\\n  .modal-content {\\n    margin-top: 90px; }\\n  .confirm-modal {\\n    margin-top: 120px; } }\\n\\n.card-unassigned {\\n  border-left: 5px solid #c80c24; }\\n\\n.card-assigned {\\n  border-left: 5px solid #1ea9f4; }\\n\\n.card-declined {\\n  border-left: 5px solid #f91e29; }\\n\\n.card-in-progress {\\n  border-left: 5px solid #0d609c; }\\n\\n.card-pending-review {\\n  border-left: 5px solid #f2ce4a; }\\n\\n.card-paused {\\n  border-left: 5px solid #fba94a; }\\n\\n.card-done {\\n  border-left: 5px solid #4caf50; }\\n\\n.card-accepted {\\n  border-left: 5px solid #33db78; }\\n\\n.unassigned-icon {\\n  color: #c80c24; }\\n\\n.assigned-icon {\\n  color: #1ea9f4; }\\n\\n.declined-icon {\\n  color: #f91e29; }\\n\\n.accepted-icon {\\n  color: #33db78; }\\n\\n.in-progress-icon {\\n  color: #0d609c; }\\n\\n.paused-icon {\\n  color: #fba94a; }\\n\\n.pending-review-icon {\\n  color: #f2ce4a; }\\n\\n.completed-icon {\\n  color: #4caf50; }\\n\\n.alert-icon {\\n  color: #Eb5757; }\\n\\n.profile {\\n  background: #f4f4f4;\\n  position: absolute;\\n  top: 69px;\\n  left: 0;\\n  width: 100%;\\n  height: 100%; }\\n\\n.tab-link {\\n  cursor: pointer; }\\n\\n.profile-card {\\n  -webkit-box-shadow: 0 7px 14px -4px rgba(0, 0, 0, 0.24);\\n          box-shadow: 0 7px 14px -4px rgba(0, 0, 0, 0.24); }\\n\\n.profile-card-top {\\n    background: #fbfbfb;\\n    padding: 1.25rem;\\n    border-top: 1px solid #ebebeb70; }\\n\\n.profile-card-right {\\n    -webkit-box-shadow: 0 7px 14px -4px rgba(0, 0, 0, 0.5);\\n            box-shadow: 0 7px 14px -4px rgba(0, 0, 0, 0.5); }\\n\\n.profile-card-right-top {\\n      background: #ededeb;\\n      padding: 0.5rem 0.8rem; }\\n\\n.profile-card-right-top .profile-icon {\\n        width: 70px;\\n        padding: 0; }\\n\\n.profile-card-right-top .profile-icon i {\\n          font-size: 1.5rem; }\\n\\n.profile-card-right-top .profile-icon span {\\n          font-weight: normal !important; }\\n\\n.card {\\n  border-radius: 0.1rem !important; }\\n\\nhr {\\n  border-top: 2px solid #eeeeee78; }\\n\\n.profile-name {\\n  color: #666666;\\n  font-size: 1.5rem; }\\n\\n.profile-name span {\\n    font-weight: 900; }\\n\\n.change-password {\\n  margin: 0px !important; }\\n\\n.blue-color {\\n  color: #3ca3de; }\\n\\n.show-more {\\n  cursor: pointer; }\\n\\n.indicator {\\n  margin: 5px 0 0;\\n  border: 2px solid #e8e8e8; }\\n\\n.indicator.active {\\n    border: 2px solid #3ca3de; }\\n\\n.big-grey {\\n  color: #828282;\\n  font-size: 2.2rem; }\\n\\n.small-blue {\\n  font-size: 0.8rem;\\n  color: #3ca3de;\\n  font-weight: bold; }\\n\\n.smaller-blue {\\n  font-size: 0.75rem;\\n  color: #3ca3de;\\n  font-weight: bold; }\\n\\n.error {\\n  font-size: 10px;\\n  font-weight: 500; }\\n\\n.is-invalid:focus {\\n  -webkit-box-shadow: 0 1px 0 0 #dc3545 !important;\\n          box-shadow: 0 1px 0 0 #dc3545 !important;\\n  border-bottom-color: #dc3545 !important; }\\n\\n.table td,\\n.table th {\\n  padding: 5px; }\\n\\n.task-body {\\n  border: 1px solid #f2f2f2; }\\n\\n.numberCircle {\\n  height: 30px;\\n  width: 30px;\\n  display: table-cell;\\n  text-align: center;\\n  vertical-align: middle;\\n  border-radius: 50%;\\n  text-align: center;\\n  font-size: 12px;\\n  background: #828282; }\\n\\n.phone-field {\\n  width: 80%;\\n  float: left; }\\n\\n.phone-edit {\\n  float: left;\\n  cursor: pointer; }\\n\\n.phone-edit i {\\n    border: none; }\\n\\n.table th,\\n.table td {\\n  vertical-align: middle !important;\\n  font-weight: 400 !important; }\\n\\n.task-title-bg {\\n  background: #f5f5f3; }\\n\\n.task-row {\\n  margin: 0 !important;\\n  cursor: pointer; }\\n\\n.task-row .arrow {\\n    width: 10% !important; }\\n\\n.task-row .due {\\n    width: 15%; }\\n\\n.task-row .teams {\\n    width: 20%; }\\n\\n.task-row .desc {\\n    width: 45%; }\\n\\n.task-row .task-circle {\\n    width: 7%; }\\n\\n.task-badge {\\n  width: 10%; }\\n\\n.taskInactive .task-content {\\n  display: none; }\\n\\n.zero-count {\\n  min-height: 40vh; }\\n\\n.hideTaskPanel {\\n  display: none; }\\n\\n.taskActive .task-content {\\n  display: table-row-group; }\\n\\n.subTaskInactive .sub-task-content {\\n  display: none; }\\n\\n.subTaskActive .sub-task-content {\\n  display: table-row-group; }\\n\\n.viewAll {\\n  cursor: pointer; }\\n\\n.tbl-accordion-nested {\\n  width: 100%; }\\n\\n.tbl-accordion-nested td,\\n  .tbl-accordion-nested th {\\n    padding: 10px;\\n    padding-left: 0.75rem;\\n    padding-right: 0.75rem; }\\n\\n.tbl-accordion-nested .tbl-accordion-section {\\n    cursor: pointer; }\\n\\n@media (max-width: 576px) {\\n  .profile-image-con {\\n    width: 220px;\\n    height: 220px;\\n    margin: 0 auto; }\\n  .task-row .task-circle {\\n    width: 2%; }\\n  .task-badge {\\n    width: 20%; } }\\n\\n@media (min-width: 576px) and (max-width: 768px) {\\n  .profile-image-con {\\n    width: 470px;\\n    height: 470px;\\n    margin: 0 auto; }\\n  .task-row .task-circle {\\n    width: 2%; }\\n  .task-badge {\\n    width: 20%; } }\\n\\n@media (min-width: 768px) and (max-width: 992px) {\\n  .profile-image-con {\\n    width: 95px;\\n    height: 95px;\\n    margin: 0 auto; }\\n  .task-row .task-circle {\\n    width: 2%; }\\n  .task-badge {\\n    width: 20%; } }\\n\\n@media (min-width: 992px) and (max-width: 1200px) {\\n  .profile-image-con {\\n    width: 140px;\\n    height: 140px;\\n    margin: 0 auto; } }\\n\\n@media (min-width: 1200px) {\\n  .profile-image-con {\\n    width: 190px;\\n    height: 190px;\\n    margin: 0 auto; } }\\n\\n.profile-image-con {\\n  position: relative;\\n  border-radius: 50%;\\n  overflow: hidden;\\n  cursor: pointer; }\\n\\n.profile-image-con .img {\\n    width: 100%;\\n    height: 100%;\\n    -o-object-fit: cover;\\n       object-fit: cover; }\\n\\n.profile-image-con .overlay {\\n    position: absolute;\\n    padding: 0 1rem;\\n    height: 20%;\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-pack: center;\\n        -ms-flex-pack: center;\\n            justify-content: center;\\n    -webkit-box-align: center;\\n        -ms-flex-align: center;\\n            align-items: center;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n        -ms-flex-direction: column;\\n            flex-direction: column;\\n    text-align: center;\\n    width: 100%;\\n    background: rgba(0, 0, 0, 0.3);\\n    color: #fff;\\n    top: 80%;\\n    -webkit-transition: 0.3s all;\\n    transition: 0.3s all; }\\n\\n.profile-image-con .overlay .fa {\\n      color: #3ca3de;\\n      font-size: 1.2rem;\\n      -webkit-transition: 0.4s all;\\n      transition: 0.4s all;\\n      display: inline-block;\\n      width: 30px; }\\n\\n.profile-image-con .overlay .overlay-text {\\n      font-size: 0.75rem;\\n      opacity: 0;\\n      -webkit-transition: 0.5s all;\\n      transition: 0.5s all;\\n      margin: 0;\\n      display: none; }\\n\\n.profile-image-con:hover .overlay {\\n    top: 0;\\n    height: 100%; }\\n\\n.profile-image-con:hover .overlay .fa {\\n      font-size: 1rem; }\\n\\n.profile-image-con:hover .overlay .overlay-text {\\n      opacity: 1;\\n      display: block; }\\n\\n.file-input {\\n  display: none; }\\n\\n.modal-container ::ng-deep .modal {\\n  overflow-y: auto !important; }\\n\\n.md-form {\\n  margin: 0; }\\n\\n.md-form label {\\n    top: 1.4rem;\\n    font-size: 0.9rem; }\\n\\n.btn-groupe .btn {\\n  padding: 0.4rem;\\n  margin: 0;\\n  background: none;\\n  border: none;\\n  -webkit-box-shadow: none;\\n          box-shadow: none;\\n  font-size: 14px;\\n  font-weight: 500;\\n  color: #07417d !important; }\\n\\n@media (max-width: 575px) {\\n  .modal-content {\\n    margin-top: 50px; } }\\n\\n@media (min-width: 576px) and (max-width: 767px) {\\n  .modal-content {\\n    margin-top: 50px; } }\\n\\n@media (min-width: 768px) {\\n  .modal-content {\\n    margin-top: 120px; } }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/corona-fe-new/src/app/profile/profile.component.scss\n// module id = ../../../../../src/app/profile/profile.component.scss\n// module chunks = profile.module","import { ActiveTaskService } from \"../shared/task/activetask.service\";\r\nimport { ArchivedTaskService } from \"../shared/task/archived-task.service\";\r\nimport { EscalatedTaskService } from \"../shared/task/escalated-task.service\";\r\nimport { InactiveTaskService } from \"../shared/task/inactivetask.service\";\r\n\r\nimport { MDBSpinningPreloader } from \"../../typescripts/pro/preloader/preloader.service\";\r\n\r\nimport { environment } from \"./../../environments/environment\";\r\nimport { User } from \"../shared/user/user\";\r\n\r\nimport { Task } from \"../shared/task/task\";\r\nimport { AuthService } from \"../shared/user/auth.service\";\r\nimport { RoleService } from \"../shared/role/role.service\";\r\nimport { LocationService } from \"./../shared/location/location.service\";\r\nimport { TeamService } from \"../shared/team/team.service\";\r\nimport { UserService } from \"../shared/user/user.service\";\r\nimport { Component, OnInit, ViewChild, ChangeDetectionStrategy } from \"@angular/core\";\r\nimport { FormsModule, Validators } from \"@angular/forms\";\r\n\r\nimport * as moment from \"moment\";\r\n\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\n\r\ninterface Passwords {\r\n  oldPassword: string;\r\n  newPassword: string;\r\n  confirmNewPassword: string;\r\n}\r\n\r\ninterface Errors {\r\n  newPassword: boolean;\r\n  comparePassword: boolean;\r\n  oldPassword: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: \"app-profile\",\r\n  templateUrl: \"./profile.component.html\",\r\n  styleUrls: [\"./profile.component.scss\"]\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  @ViewChild(\"changePassModal\") changePassModal;\r\n  @ViewChild(\"changePassForm\") changePassForm;\r\n  public user: User;\r\n  public passwords: Passwords;\r\n  public errors: Errors;\r\n  public roles: BehaviorSubject<Array<{ label: string; value: string }>>;\r\n  public teams: BehaviorSubject<Array<{ label: string; value: string }>>;\r\n  public assignedTaskCount: BehaviorSubject<number>;\r\n  public completedTaskCount: BehaviorSubject<number>;\r\n  public declinedTaskCount: BehaviorSubject<number>;\r\n  public escalatedTaskCount: BehaviorSubject<number>;\r\n\r\n  public showContact: boolean;\r\n  public makePhoneEditable: boolean;\r\n  public info: string;\r\n\r\n  public showError; // suppress compiler error\r\n\r\n  public viewAllStatus: boolean;\r\n  public statusTitle: string;\r\n\r\n  public tab1: boolean;\r\n  public tab2: boolean;\r\n  public tab3: boolean;\r\n  public tab4: boolean;\r\n\r\n  public highlightedTask: number;\r\n  public subHighlightedTask: number;\r\n\r\n  public assignedTasks: BehaviorSubject<Array<Task>>;\r\n  public archivedTasks: BehaviorSubject<Array<Task>>;\r\n  public declinedTasks: BehaviorSubject<Array<Task>>;\r\n  public escalatedTasks: BehaviorSubject<Array<Task>>;\r\n\r\n  constructor(\r\n    private activeTaskService: ActiveTaskService,\r\n    private archivedTaskService: ArchivedTaskService,\r\n    private escalatedTaskService: EscalatedTaskService,\r\n    private inactiveTaskService: InactiveTaskService,\r\n    private authService: AuthService,\r\n    private locationService: LocationService,\r\n    private roleService: RoleService,\r\n    private teamService: TeamService,\r\n    private userService: UserService,\r\n    private mdbSpinningPreloader: MDBSpinningPreloader\r\n  ) {\r\n    this.user = new User();\r\n    this.teams = new BehaviorSubject([]);\r\n    this.roles = new BehaviorSubject([]);\r\n    this.teams = new BehaviorSubject([]);\r\n\r\n    this.assignedTaskCount = new BehaviorSubject(0);\r\n    this.completedTaskCount = new BehaviorSubject(0);\r\n    this.declinedTaskCount = new BehaviorSubject(0);\r\n    this.escalatedTaskCount = new BehaviorSubject(0);\r\n\r\n    this.assignedTasks = new BehaviorSubject([]);\r\n    this.archivedTasks = new BehaviorSubject([]);\r\n    this.declinedTasks = new BehaviorSubject([]);\r\n    this.escalatedTasks = new BehaviorSubject([]);\r\n\r\n    this.showContact = false;\r\n    this.info = \"more\";\r\n    this.makePhoneEditable = true;\r\n\r\n    this.viewAllStatus = false;\r\n    this.statusTitle = \"View All\";\r\n\r\n    const formatTaskDate = moment(1515772800000).format(\"DD MMM YYYY\");\r\n\r\n    this.passwords = {\r\n      oldPassword: \"\",\r\n      newPassword: \"\",\r\n      confirmNewPassword: \"\"\r\n    };\r\n\r\n    this.errors = {\r\n      newPassword: false,\r\n      comparePassword: false,\r\n      oldPassword: false\r\n    };\r\n\r\n    this.tab1 = false;\r\n    this.tab2 = true;\r\n    this.tab3 = true;\r\n    this.tab4 = true;\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.authService.getUserId()) {\r\n      const loggedInUserId = this.authService.getUserId();\r\n\r\n      this.userService.getUser(loggedInUserId).subscribe(res => {\r\n        this.user = res[\"data\"];\r\n      });\r\n\r\n      this.activeTaskService.getUserTasks(loggedInUserId).subscribe();\r\n      this.archivedTaskService.getUserTasks(loggedInUserId).subscribe();\r\n      this.inactiveTaskService.getUserTasks(loggedInUserId).subscribe();\r\n      this.escalatedTaskService.getUserTasks(loggedInUserId).subscribe();\r\n\r\n      this.activeTaskService.userTasks.subscribe(data => {\r\n        this.assignedTaskCount.next(data.length);\r\n        this.assignedTasks.next(data);\r\n      });\r\n\r\n      this.archivedTaskService.userTasks.subscribe(data => {\r\n        this.completedTaskCount.next(data.length);\r\n        this.archivedTasks.next(data);\r\n      });\r\n\r\n      this.inactiveTaskService.userTasks.subscribe(data => {\r\n        this.declinedTaskCount.next(data.length);\r\n        this.declinedTasks.next(data);\r\n      });\r\n\r\n      this.escalatedTaskService.userTasks.subscribe(data => {\r\n        this.escalatedTaskCount.next(data.length);\r\n        this.escalatedTasks.next(data);\r\n      });\r\n    }\r\n\r\n    this.roleService.roles.subscribe(roles => {\r\n      this.roles.next(\r\n        roles.map(role => {\r\n          return { value: role.userGroupId, label: role.name };\r\n        })\r\n      );\r\n    });\r\n\r\n    this.teamService.teams.subscribe(teams => {\r\n      this.teams.next(\r\n        teams.map(team => {\r\n          return { value: team.teamId, label: team.teamName };\r\n        })\r\n      );\r\n    });\r\n\r\n    this.activeTaskService.getUserTasks(this.user);\r\n    this.mdbSpinningPreloader.stop();\r\n  }\r\n\r\n  getTaskCount() {\r\n  }\r\n\r\n  getUserGroupName(user: User) {\r\n    if (user) {\r\n      const group = this.roles.value.filter(v => {\r\n        return v.value === user.userGroupId;\r\n      });\r\n      return group.length ? group[0].label : \"N/A\";\r\n    }\r\n  }\r\n\r\n  getTeamNames(user: User) {\r\n    if (user && user.teamIds) {\r\n      const teams = user.teamIds\r\n        .map(id => {\r\n          return this.teams.value\r\n            .filter(v => {\r\n              return v.value === id;\r\n            })\r\n            .map(v => {\r\n              return v.label;\r\n            })\r\n            .join(\", \");\r\n        })\r\n        .filter(team => {\r\n          return team.length > 0;\r\n        })\r\n        .join(\", \");\r\n\r\n      return teams.length > 0 ? teams : \"N/A\";\r\n    }\r\n  }\r\n\r\n  getUserCountry(user) {\r\n    if (user && user.stsData) {\r\n      return user.stsData.UserCountry[0].IsoCode;\r\n    }\r\n  }\r\n\r\n  uploadProfileImage(event) {\r\n    const reader = new FileReader();\r\n    const AWS = window.AWS;\r\n    if (event.target.files && event.target.files.length > 0) {\r\n      const file = event.target.files[0];\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => {\r\n        AWS.config.accessKeyId = environment.corona.s3Bucket.ACCESS_KEY_ID;\r\n        AWS.config.secretAccessKey = environment.corona.s3Bucket.SECRET_ACCESS_KEY;\r\n        const bucket = new AWS.S3({\r\n          params: { Bucket: environment.corona.s3Bucket.NAME }\r\n        });\r\n        const params = { Key: file.name, Body: file };\r\n        let imgUrl: string;\r\n        imgUrl = \"\";\r\n        const user = this.user;\r\n        const userService = this.userService;\r\n        bucket.upload(params, function(error, res) {\r\n          user.profilePicture = res.Location;\r\n          userService.createOrUpdateUser(user);\r\n        });\r\n      };\r\n    }\r\n  }\r\n\r\n  updatePhoneNumber() {\r\n    const user = this.user;\r\n    this.userService.createOrUpdateUser(user);\r\n    this.makePhoneEditable = !this.makePhoneEditable;\r\n  }\r\n\r\n  editPhoneNumber() {\r\n    this.makePhoneEditable = !this.makePhoneEditable;\r\n  }\r\n\r\n  gotoTab(id) {\r\n    if (id === 1) {\r\n      this.tab1 = false;\r\n      this.tab2 = true;\r\n      this.tab3 = true;\r\n      this.tab4 = true;\r\n    } else if (id === 2) {\r\n      this.tab1 = true;\r\n      this.tab2 = false;\r\n      this.tab3 = true;\r\n      this.tab4 = true;\r\n    } else if (id === 3) {\r\n      this.tab1 = true;\r\n      this.tab2 = true;\r\n      this.tab3 = false;\r\n      this.tab4 = true;\r\n    } else if (id === 4) {\r\n      this.tab1 = true;\r\n      this.tab2 = true;\r\n      this.tab3 = true;\r\n      this.tab4 = false;\r\n    }\r\n  }\r\n\r\n  getFullName() {\r\n    return `${this.user.firstName} ${this.user.lastName}`;\r\n  }\r\n\r\n  openPasswordModal() {\r\n    this.changePassModal.show();\r\n  }\r\n\r\n  closePasswordModal() {\r\n    this.changePassModal.hide();\r\n  }\r\n\r\n  comparePasswords() {\r\n    if (\r\n      this.passwords.newPassword !== \"\" &&\r\n      this.passwords.confirmNewPassword !== \"\" &&\r\n      this.passwords.confirmNewPassword !== this.passwords.newPassword\r\n    ) {\r\n      return (this.errors.comparePassword = true);\r\n    }\r\n    return (this.errors.comparePassword = false);\r\n  }\r\n\r\n  changePassword() {\r\n    this.authService.changePassword(this.passwords.oldPassword, this.passwords.newPassword);\r\n  }\r\n\r\n  contactInfoToggle() {\r\n    this.showContact = !this.showContact;\r\n    this.info = this.showContact === true ? \"less\" : \"more\";\r\n  }\r\n\r\n  toggleTask(newValue: number) {\r\n    this.highlightedTask = this.highlightedTask === newValue ? 0 : newValue;\r\n  }\r\n\r\n  viewAllActiveTasks() {\r\n    this.viewAllStatus = !this.viewAllStatus;\r\n    if (!this.viewAllStatus) {\r\n      this.statusTitle = \"View All\";\r\n    } else {\r\n      this.statusTitle = \"Cancel\";\r\n    }\r\n  }\r\n\r\n  formatTaskDate(value) {\r\n    return moment(value).format(\"DD MMM YYYY hh:mm a\");\r\n  }\r\n\r\n  toggleSubTask(newValue: number) {\r\n    this.toggleTask(4);\r\n    this.subHighlightedTask = this.subHighlightedTask === newValue ? 0 : newValue;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Projects/corona-fe-new/src/app/profile/profile.component.ts","import { SharedModule } from \"app/shared/shared.module\";\r\nimport { NgModule, NO_ERRORS_SCHEMA } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { ProfileComponent } from \"app/profile/profile.component\";\r\n\r\nexport const routes: Routes = [{ path: \"\", component: ProfileComponent }];\r\n\r\n@NgModule({\r\n  imports: [SharedModule, RouterModule.forChild(routes)],\r\n  declarations: [ProfileComponent],\r\n  schemas: [NO_ERRORS_SCHEMA]\r\n})\r\nexport class ProfileModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/corona-fe-new/src/app/profile/profile.module.ts"],"sourceRoot":"webpack:///"}