{"version":3,"sources":["C:/Projects/corona-fe-new/src/app/activity-widget/activity-widget.component.html","C:/Projects/corona-fe-new/src/app/activity-widget/activity-widget.component.scss","C:/Projects/corona-fe-new/src/app/activity-widget/activity-widget.component.ts","C:/Projects/corona-fe-new/src/app/activity-widget/activity-widget.module.ts"],"names":[],"mappings":"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","file":"activity-widget.module.chunk.js","sourcesContent":["module.exports = \"<ng-container *ngIf=\\\"showMap\\\">\\r\\n  <div class=\\\"activity-container\\\">\\r\\n    <div class=\\\"container-fluid px-0 aw\\\">\\r\\n      <div class=\\\"row no-gutters\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <mdb-ng-select placeholder=\\\"Area\\\" [filterEnabled]=\\\"true\\\" name=\\\"area\\\" #area [options]=\\\"areas | async\\\" [(ngModel)]=\\\"area.areaName\\\"\\r\\n            (ngModelChange)=\\\"onAreaChange($event)\\\" required></mdb-ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <mdb-ng-select placeholder=\\\"Team Name\\\" [filterEnabled]=\\\"true\\\" name=\\\"team\\\" #team [options]=\\\"teamsByArea | async\\\" [(ngModel)]=\\\"team.teamName\\\"\\r\\n            (ngModelChange)=\\\"onTeamChange($event)\\\" required></mdb-ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\" (click)=\\\"toggleMarker()\\\">\\r\\n          <mdb-ng-select placeholder=\\\"User firstname /lastname\\\" [filterEnabled]=\\\"true\\\" name=\\\"user\\\" #user [options]=\\\"users | async\\\"\\r\\n            [(ngModel)]=\\\"user.firstname\\\" (ngModelChange)=\\\"onUserChange($event)\\\" required></mdb-ng-select>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <agm-map #activityMap [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [zoom]=\\\"zoom\\\" [clickableIcons]=\\\"false\\\" (mapClick)=\\\"mapClicked()\\\">\\r\\n      <ng-container *ngIf=\\\"!showUserMarker\\\">\\r\\n        <agm-marker *ngFor=\\\"let m of markers; let i = index\\\" [latitude]=\\\"m.lat\\\" [longitude]=\\\"m.lng\\\" [iconUrl]=\\\"m.icon\\\" (markerClick)=\\\"markerClicked(m)\\\">\\r\\n          <agm-info-window #infoWindow [disableAutoPan]=\\\"true\\\" [isOpen]=\\\"m.isOpen\\\">\\r\\n            <div class=\\\"row no-gutters\\\">\\r\\n              <div class=\\\"col-3\\\">\\r\\n                <img class=\\\"rounded-circle\\\" style=\\\"max-width:100% !important;\\\" src=\\\"../../assets/avatar.png\\\" alt=\\\"User image\\\">\\r\\n              </div>\\r\\n              <div class=\\\"col-9 p-2 w-120p\\\">\\r\\n                <p class=\\\"my-1 dark-text\\\">{{m.label}}</p>\\r\\n                <p class=\\\"my-1 light-text\\\">{{m.data.mobileNumber}}</p>\\r\\n                <p class=\\\"m-0\\\" *ngIf=\\\"!m.data.isOnline\\\">\\r\\n                  <span class=\\\"badge offline-badge\\\">Last Seen: </span> {{m.data.lastSeen ? convertDateTime(m.data.lastSeen, \\\"hh:mm\\\") + \\\" , \\\" + convertDateTime(m.data.lastSeen,\\r\\n                  \\\"DD MMM YYYY\\\") : 'N/A' }} </p>\\r\\n                <p class=\\\"m-0 badge online-badge\\\" *ngIf=\\\"m.data.isOnline && m.data.isBusy\\\">Online</p>\\r\\n                <p class=\\\"m-0 badge idle-badge\\\" *ngIf=\\\"m.data.isOnline && !m.data.isBusy\\\">Online idle</p>\\r\\n                <hr class=\\\"my-1\\\">\\r\\n                <p class=\\\"m-0 semi-dark-label\\\">{{ allOverdueTasksCount }}</p>\\r\\n                <p class=\\\"m-0 light-text\\\">Overdue {{ allOverdueTasksCount == 1 ? 'task': 'tasks' }}</p>\\r\\n                <!-- <p class=\\\"m-0 semi-dark-label\\\">{{ getUserOverdueTasks(m.data) }}</p>\\r\\n                <p class=\\\"m-0 light-text\\\">Overdue {{ getUserOverdueTasks(m.data) == 1 ? 'task': 'tasks' }}</p> -->\\r\\n              </div>\\r\\n            </div>\\r\\n          </agm-info-window>\\r\\n\\r\\n        </agm-marker>\\r\\n      </ng-container>\\r\\n\\r\\n\\r\\n      <ng-container *ngIf=\\\"showUserMarker\\\">\\r\\n        <agm-marker [latitude]=\\\"userMarker.lat\\\" [longitude]=\\\"userMarker.lng\\\" [iconUrl]=\\\"userMarker.icon\\\" (markerClick)=\\\"markerClicked(userMarker)\\\">\\r\\n\\r\\n          <agm-info-window #infoWindow [disableAutoPan]=\\\"true\\\" [isOpen]=\\\"userMarker.isOpen\\\">\\r\\n            <div class=\\\"row no-gutters\\\">\\r\\n              <div class=\\\"col-3\\\">\\r\\n                <img class=\\\"rounded-circle\\\" style=\\\"max-width:100% !important;\\\" src=\\\"../../assets/avatar.png\\\" alt=\\\"User image\\\">\\r\\n              </div>\\r\\n              <div class=\\\"col-9 p-2 w-120p\\\">\\r\\n                <p class=\\\"my-1 dark-text\\\">{{userMarker.label}}</p>\\r\\n                <p class=\\\"my-1 light-text\\\">{{userMarker.data.mobileNumber}}</p>\\r\\n                <p class=\\\"m-0\\\" *ngIf=\\\"!userMarker.data.isOnline\\\">\\r\\n                  <span class=\\\"badge offline-badge\\\">Last Seen: </span> {{userMarker.data.lastSeen ? convertDateTime(userMarker.data.lastSeen, \\\"hh:mm\\\") + \\\"\\r\\n                  , \\\" + convertDateTime(userMarker.data.lastSeen, \\\"DD MMM YYYY\\\") : 'N/A' }} </p>\\r\\n\\r\\n                <p class=\\\"m-0 badge online-badge\\\" *ngIf=\\\"userMarker.data.isOnline && userMarker.data.isBusy\\\">Online</p>\\r\\n                <p class=\\\"m-0 badge idle-badge\\\" *ngIf=\\\"userMarker.data.isOnline && !userMarker.data.isBusy\\\">Online idle</p>\\r\\n                <hr class=\\\"my-1\\\">\\r\\n                <p class=\\\"m-0 semi-dark-label\\\">{{ getUserOverdueTasks(userMarker.data) }}</p>\\r\\n                <p class=\\\"m-0 light-text\\\">Overdue {{ getUserOverdueTasks(userMarker.data) == 1 ? 'task': 'tasks' }}</p>\\r\\n              </div>\\r\\n            </div>\\r\\n          </agm-info-window>\\r\\n\\r\\n        </agm-marker>\\r\\n      </ng-container>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    </agm-map>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"activity-bottom\\\">\\r\\n    <div class=\\\"activity-slab card p-2\\\">\\r\\n      <div *ngIf=\\\"!showUserMarker\\\">\\r\\n        <div class=\\\"row w-100 m-0\\\">\\r\\n          <div class=\\\"col-6\\\">\\r\\n            <p class=\\\"dark-text m-0\\\"> {{userLength? userLength: 0 }} </p>\\r\\n\\r\\n            <p class=\\\"light-text m-0 text-nowrap\\\"> Available {{ userLength == 1 ? 'user': 'users' }}</p>\\r\\n          </div>\\r\\n          <div class=\\\"col-6\\\">\\r\\n            <p class=\\\"dark-text m-0\\\"> {{ allOverdueTasksCount }}</p>\\r\\n            <p class=\\\"light-text m-0 text-nowrap\\\"> Overdue {{ allOverdueTasksCount == 1 ? 'task': 'tasks' }}</p>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"showUserMarker\\\">\\r\\n        <div class=\\\"row w-100 m-0\\\">\\r\\n          <div class=\\\"col-6\\\">\\r\\n            <p class=\\\"dark-text m-0\\\">{{ userMarker.lat ? 1 : 0 }} </p>\\r\\n            <p class=\\\"light-text m-0 text-nowrap\\\"> Available {{ userMarker.lat == 0 ? 'users': 'user' }}</p>\\r\\n          </div>\\r\\n          <div class=\\\"col-6\\\">\\r\\n            <p class=\\\"dark-text m-0\\\"> {{ getUserOverdueTasks(userMarker.data) }} </p>\\r\\n            <p class=\\\"light-text m-0 text-nowrap\\\"> Overdue {{ getUserOverdueTasks(userMarker.data) == 1 ? 'task': 'tasks' }}</p>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"activity-legend card p-2 my-2\\\">\\r\\n      <div class=\\\"row w-100 m-0 text-center\\\">\\r\\n        <div class=\\\"col-4\\\">\\r\\n          <img src=\\\"../../assets/svg/legend-online.svg\\\" class=\\\"img-legend\\\" alt=\\\"Online icon\\\">\\r\\n          <p class=\\\"my-1 light-text text-nowrap\\\">Online</p>\\r\\n        </div>\\r\\n        <div class=\\\"col-4\\\">\\r\\n          <img src=\\\"../../assets/svg/legend-idle.svg\\\" class=\\\"img-legend\\\" alt=\\\"Idle icon\\\">\\r\\n          <p class=\\\"my-1 light-text text-nowrap\\\">Online Idle</p>\\r\\n        </div>\\r\\n        <div class=\\\"col-4\\\">\\r\\n          <img src=\\\"../../assets/svg/legend-offline.svg\\\" class=\\\"img-legend\\\" alt=\\\"Offline icon\\\">\\r\\n          <p class=\\\"my-1 light-text text-nowrap\\\">Offline</p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</ng-container>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/corona-fe-new/src/app/activity-widget/activity-widget.component.html\n// module id = ../../../../../src/app/activity-widget/activity-widget.component.html\n// module chunks = activity-widget.module","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".semi-dark-label {\\n  font-weight: 500;\\n  color: #676767; }\\n\\n.light-text {\\n  color: #9a9a9a;\\n  font-size: 12px; }\\n\\n.light-text span {\\n    font-weight: 400; }\\n\\n.dark-text {\\n  color: #000000;\\n  font-size: 14px;\\n  font-weight: 500; }\\n\\nagm-map {\\n  height: 85vh;\\n  z-index: 99999; }\\n\\n.activity-container {\\n  position: absolute;\\n  top: 69px;\\n  left: 0;\\n  width: 100%; }\\n\\n.activity-bottom {\\n  position: fixed;\\n  right: 7vh;\\n  bottom: 3vh; }\\n\\n.activity-slab {\\n  background: white; }\\n\\n.activity-legend {\\n  background: white; }\\n\\n.w-120p {\\n  width: 105px !important; }\\n\\n.badge {\\n  -webkit-box-shadow: none;\\n          box-shadow: none;\\n  border-radius: 25px; }\\n\\n.offline-badge {\\n  background: #ee2f2f;\\n  font-size: 12px; }\\n\\n.offline-badge span {\\n    font-weight: 400; }\\n\\n.online-badge {\\n  background: #00cb00;\\n  font-size: 12px; }\\n\\n.idle-badge {\\n  background: #f0c315;\\n  font-size: 12px; }\\n\\n::ng-deep agm-map .gm-style-iw div:first-child {\\n  overflow-x: hidden; }\\n\\n.aw::ng-deep mdb-ng-select > div > div.single,\\n.aw::ng-deep mdb-ng-select > div > div.multiple {\\n  padding: 4px 18px;\\n  border: 1px solid #bdbdbd;\\n  border-bottom: 1px solid #bdbdbd;\\n  -webkit-box-shadow: 0 0.3px 0 0 #bdbdbd;\\n          box-shadow: 0 0.3px 0 0 #bdbdbd;\\n  font-size: 0.8rem; }\\n\\n.aw::ng-deep mdb-ng-select mdb-select-dropdown .dropdown-content li > a,\\n.aw::ng-deep mdb-ng-select mdb-select-dropdown .dropdown-content li > span,\\n.aw::ng-deep mdb-ng-select > div > div.single > div.placeholder,\\n.aw::ng-deep mdb-ng-select > div > div.multiple > div.placeholder,\\n.aw::ng-deep mdb-ng-select > div > div.single > div.value,\\n.aw::ng-deep mdb-ng-select > div > div.multiple > div.option {\\n  color: #495057;\\n  font-weight: 400; }\\n\\n.aw::ng-deep mdb-ng-select mdb-select-dropdown .dropdown-content li > a .deselect-option,\\n  .aw::ng-deep mdb-ng-select mdb-select-dropdown .dropdown-content li > span .deselect-option,\\n  .aw::ng-deep mdb-ng-select > div > div.single > div.placeholder .deselect-option,\\n  .aw::ng-deep mdb-ng-select > div > div.multiple > div.placeholder .deselect-option,\\n  .aw::ng-deep mdb-ng-select > div > div.single > div.value .deselect-option,\\n  .aw::ng-deep mdb-ng-select > div > div.multiple > div.option .deselect-option {\\n    line-height: 0; }\\n\\n.aw::ng-deep mdb-ng-select > div > div.single > div.placeholder,\\n.aw::ng-deep mdb-ng-select > div > div.multiple > div.placeholder {\\n  color: #bbbbbb; }\\n\\n.aw::ng-deep mdb-ng-select .filter input {\\n  font-size: 0.8rem;\\n  color: #000;\\n  padding: 0 18px; }\\n\\n.aw::ng-deep mdb-ng-select > div > div.single > div.value,\\n.aw::ng-deep mdb-ng-select > div > div.single > div.placeholder,\\n.aw::ng-deep .md-form.form-sm input {\\n  padding: 0; }\\n\\n.aw::ng-deep .form-control {\\n  margin-bottom: 0; }\\n\\n.aw::ng-deep mdb-ng-select > div > div > div.toggle {\\n  color: #bbbbbb;\\n  font-size: 6px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/corona-fe-new/src/app/activity-widget/activity-widget.component.scss\n// module id = ../../../../../src/app/activity-widget/activity-widget.component.scss\n// module chunks = activity-widget.module","import { Component, OnInit, ViewChild, ChangeDetectionStrategy, ChangeDetectorRef } from \"@angular/core\";\r\n\r\nimport * as moment from \"moment\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { AreaService } from \"../shared/area/area.service\";\r\nimport { TeamService } from \"../shared/team/team.service\";\r\nimport { UserService } from \"../shared/user/user.service\";\r\nimport { ActiveTaskService } from \"../shared/task/activetask.service\";\r\n\r\nimport { MDBSpinningPreloader } from \"../../typescripts/pro/preloader/preloader.service\";\r\nimport { Area } from \"../shared/area/area\";\r\nimport { User } from \"../shared/user/user\";\r\nimport { MapsService } from \"../shared/maps/maps.service\";\r\nimport { Task } from \"../shared/task/task\";\r\n\r\ninterface Marker {\r\n  lat: number;\r\n  lng: number;\r\n  label?: string;\r\n  draggable?: boolean;\r\n  data?: any;\r\n  icon?: string;\r\n  isOpen?: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: \"app-activity-widget\",\r\n  templateUrl: \"./activity-widget.component.html\",\r\n  styleUrls: [\"./activity-widget.component.scss\"],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ActivityWidgetComponent implements OnInit {\r\n  @ViewChild(\"activityMap\") activityMap;\r\n  @ViewChild(\"team\") teamSelect;\r\n\r\n  lat: number;\r\n  lng: number;\r\n  zoom: number;\r\n  markers: Marker[];\r\n  marker: Marker;\r\n  userMarker: Marker;\r\n  iconUrl: string;\r\n  areaCoords: BehaviorSubject<Array<any>>;\r\n\r\n  public areas: BehaviorSubject<Array<{ value: string; label: string }>>;\r\n  public users: BehaviorSubject<Array<{ value: string; label: string }>>;\r\n  public userLength;\r\n  public allUsers: Array<User>;\r\n  public allOfUsers: Array<User>;\r\n  public allTasks: Array<Task>;\r\n  public teams: BehaviorSubject<Array<{ value: string; label: string }>>;\r\n  public teamsByArea: BehaviorSubject<Array<{ value: string; label: string }>>;\r\n  public searchQuery: string;\r\n  public areaTeams: Array<{ value: string; label: string }>;\r\n  public members: Array<any>;\r\n  public selectedUser: User;\r\n  public userOverdueTasksCount: number;\r\n  public allOverdueTasksCount: number;\r\n  public showUserMarker: boolean;\r\n  public locate: Array<any>;\r\n  public showMap;\r\n\r\n  constructor(\r\n    private ms: MapsService,\r\n    private mdbSpinningPreloader: MDBSpinningPreloader,\r\n    private areaService: AreaService,\r\n    private userService: UserService,\r\n    private teamService: TeamService,\r\n    private taskService: ActiveTaskService,\r\n    private ref: ChangeDetectorRef\r\n  ) {\r\n    this.areas = new BehaviorSubject([]);\r\n    this.users = new BehaviorSubject([]);\r\n    this.areaCoords = new BehaviorSubject([]);\r\n    this.teamsByArea = new BehaviorSubject([]);\r\n    this.allOverdueTasksCount = 0;\r\n    this.userOverdueTasksCount = 0;\r\n    this.iconUrl = \"../../assets/svg/online.svg\";\r\n\r\n    this.userMarker = {\r\n      lat: 0,\r\n      lng: 0,\r\n      label: \"\",\r\n      draggable: false,\r\n      data: {},\r\n      icon: \"\",\r\n      isOpen: false\r\n    };\r\n\r\n    this.lat = 6.426013463543917;\r\n    this.lng = 3.4273771048901835;\r\n    this.zoom = 15;\r\n    this.showMap = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.mdbSpinningPreloader.stop();\r\n    this.showMap = true;\r\n    this.taskService.tasks.subscribe(data => {\r\n      this.allTasks = data;\r\n    });\r\n\r\n    this.areaService.areas.subscribe(areas => {\r\n      const list = areas.map(area => {\r\n        return {\r\n          value: area.areaName,\r\n          label: area.areaName\r\n        };\r\n      });\r\n\r\n\r\n      this.areas.next(list);\r\n    });\r\n\r\n    this.userService.users.subscribe(users => {\r\n      this.allOfUsers = users;\r\n      this.allUsers = users\r\n        .filter(v => {\r\n          return v.location;\r\n        })\r\n        .map(user => {\r\n          return user;\r\n        });\r\n\r\n      const list = users\r\n        .filter(v => {\r\n          return v.location;\r\n        })\r\n        .map(user => {\r\n          return {\r\n            value: user.userId,\r\n            label: user.getFullName()\r\n          };\r\n        });\r\n\r\n      this.users.next(list);\r\n    });\r\n\r\n    this.markers = [];\r\n  }\r\n\r\n  setCurrentPosition() {\r\n    if (\"geolocation\" in navigator) {\r\n      navigator.geolocation.getCurrentPosition(position => {\r\n        this.lat = position.coords.latitude;\r\n        this.lng = position.coords.longitude;\r\n        this.zoom = 15;\r\n        this.activityMap.triggerResize(false);\r\n      });\r\n    } else {\r\n      this.lat = 6.426013463543917;\r\n      this.lng = 3.4273771048901835;\r\n      this.zoom = 15;\r\n      this.activityMap.triggerResize(false);\r\n    }\r\n  }\r\n  watchPosition() {\r\n    this.areaCoords.subscribe(data => {\r\n      this.locate = data;\r\n      this.lat = this.locate[0];\r\n      this.lng = this.locate[1];\r\n    });\r\n\r\n    if (\"geolocation\" in navigator) {\r\n      navigator.geolocation.watchPosition(position => {\r\n        this.lat = position.coords.latitude;\r\n        this.lng = position.coords.longitude;\r\n        this.zoom = 15;\r\n        this.activityMap.triggerResize(false);\r\n      });\r\n    } else {\r\n      this.lat = 6.426013463543917;\r\n      this.lng = 3.4273771048901835;\r\n      this.zoom = 15;\r\n      this.activityMap.triggerResize(false);\r\n    }\r\n  }\r\n\r\n  mapClicked() {\r\n    if (this.markers) {\r\n      if (this.userMarker) {\r\n        this.userMarker.isOpen = false;\r\n      }\r\n      this.markers.forEach(i => (i.isOpen = false));\r\n    }\r\n  }\r\n\r\n  markerClicked(m) {\r\n    m.isOpen = !m.isOpen;\r\n  }\r\n\r\n  convertDateTime(dateTime, format) {\r\n    if (dateTime === 0 || undefined) {\r\n      return \"-\";\r\n    }\r\n    return moment(new Date(dateTime)).format(format);\r\n  }\r\n\r\n  onUserChange(userIdObj) {\r\n    const userId = userIdObj;\r\n    if (userId !== \"\") {\r\n      this.selectedUser = this.allUsers.filter(user => {\r\n        return user.userId === userId;\r\n      })[0];\r\n      if (this.selectedUser && this.selectedUser.location && this.selectedUser.location.lat) {\r\n        this.userMarker = {\r\n          lat: this.selectedUser.location.lat,\r\n          lng: this.selectedUser.location.lng,\r\n          label: this.selectedUser.getFullName(),\r\n          draggable: false,\r\n          data: this.selectedUser,\r\n          icon: `../../assets/svg/${this.setStatus(this.selectedUser)}.svg`,\r\n          isOpen: false\r\n        };\r\n        this.lat = this.selectedUser.location.lat;\r\n        this.lng = this.selectedUser.location.lng;\r\n        this.zoom = 18;\r\n        this.activityMap.triggerResize(false);\r\n      } else {\r\n        this.userMarker = {\r\n          lat: 0,\r\n          lng: 0,\r\n          label: \"\",\r\n          draggable: false,\r\n          data: {},\r\n          icon: \"\",\r\n          isOpen: false\r\n        };\r\n        console.log(\"User location not available\");\r\n      }\r\n      this.teamSelect.select(null);\r\n    }\r\n  }\r\n\r\n  // fetch user overdue tasks\r\n  getUserOverdueTasks(user) {\r\n    const id = user.userId;\r\n    let tasksCount = 0;\r\n    this.allTasks.forEach(task => {\r\n      if (task.assignee === id && task.overdue) {\r\n        tasksCount++;\r\n      }\r\n    });\r\n    return tasksCount;\r\n  }\r\n\r\n  onTeamChange(event) {\r\n    if (event !== \"\") {\r\n      this.allOverdueTasksCount = 0;\r\n      this.showUserMarker = false;\r\n      this.teamService.teams.subscribe(u => {\r\n        u\r\n          .filter(v => {\r\n            this.members = [];\r\n            return v.teamId === event;\r\n          })\r\n          .map(w => {\r\n            w.teamMembers.forEach(x => {\r\n              this.userService.users.subscribe(y => {\r\n                y.forEach(z => {\r\n                  if (\r\n                    z.userId === x &&\r\n                    function() {\r\n                      this.members.forEach(e => {\r\n                        return e.userId !== z.userId;\r\n                      });\r\n                    }\r\n                  ) {\r\n                    this.members.unshift(z);\r\n                  }\r\n                });\r\n              });\r\n            });\r\n            this.populateMarkers();\r\n          });\r\n      });\r\n      this.teamService.teamMembers.subscribe(data => {\r\n        this.members = [];\r\n        data.forEach(data => {\r\n          // fetch all overdue tasks\r\n          this.allTasks.forEach(task => {\r\n            if (task.overdue) {\r\n              this.allOverdueTasksCount++;\r\n            }\r\n          });\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  populateMarkers() {\r\n    this.markers = Array.from(new Set(this.members))\r\n      .filter(data => {\r\n        return data.location;\r\n      })\r\n      .map(data => {\r\n        if (data.location) {\r\n          return {\r\n            lat: data.location.lat,\r\n            lng: data.location.lng,\r\n            label: data.getFullName(),\r\n            draggable: false,\r\n            data: data,\r\n            icon: `../../assets/svg/${this.setStatus(data)}.svg`,\r\n            isOpen: false\r\n          };\r\n        }\r\n        return;\r\n      });\r\n    this.userLength = this.markers.length;\r\n  }\r\n\r\n  onAreaChange(areaId) {\r\n    if (areaId !== \"\") {\r\n      this.areaService.areas.subscribe(data => {\r\n        data\r\n          .filter(x => {\r\n            return x.areaName === areaId;\r\n          })\r\n          .map(x => {\r\n            const address = x.cities[0] + \",\" + x.state + \",\" + x.country;\r\n            return this.ms.getGeocoding(address).subscribe();\r\n          });\r\n      });\r\n\r\n      this.ms.locate.subscribe(coords => {\r\n        this.areaCoords.next(coords);\r\n      });\r\n      this.zoom = 13;\r\n      this.activityMap.triggerResize(false);\r\n      this.teamService.getTeamsByArea(areaId).subscribe();\r\n      this.teamsByArea = this.teamService.teamsByArea;\r\n      this.userLength = 0;\r\n      this.markers = [];\r\n    }\r\n  }\r\n\r\n  setStatus(data) {\r\n    if (data.isOnline) {\r\n      if (data.isBusy) {\r\n        return \"online\";\r\n      }\r\n      return \"idle\";\r\n    }\r\n    return \"offline\";\r\n  }\r\n\r\n  toggleMarker() {\r\n    return (this.showUserMarker = true);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/corona-fe-new/src/app/activity-widget/activity-widget.component.ts","import { SharedModule } from \"app/shared/shared.module\";\r\nimport { ActivityWidgetComponent } from \"app/activity-widget/activity-widget.component\";\r\nimport { NgModule, NO_ERRORS_SCHEMA } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nexport const routes: Routes = [{ path: \"\", component: ActivityWidgetComponent }];\r\n\r\n@NgModule({\r\n  imports: [SharedModule, RouterModule.forChild(routes)],\r\n  declarations: [ActivityWidgetComponent],\r\n  schemas: [NO_ERRORS_SCHEMA]\r\n})\r\nexport class ActivityWidgetModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/corona-fe-new/src/app/activity-widget/activity-widget.module.ts"],"sourceRoot":"webpack:///"}